1. 
mystery(5, 6)
-------------
    a = 5
    b = 6
    myst_rest = mystery(4, 4) = mystery(3, 2) = mystery(2, 0) = 8 
    return 6 + 8 = 14

    mystery(4, 4)
    -------------
        a = 4
        b = 4
        myst_rest = mystery(3, 2) = mystery(2, 0) = 4
        return 4 + 4 = 8

		mystery(3, 2)
    		-------------
        	a = 3
        	b = 2
       		myst_rest = mystery(2, 0) = 2
        	return 2 + 2 = 4
		
			mystery(2, 0)
    			-------------
        		a = 2
        		b = 0
        		return 2

2.
The value returned by mystery(5,6) is 14

3.
There would be 9 stack frames. The recursive call continues for four stages (the function mystery gets called four times). Each stage contains two variables a and b, and therefore 2 frame stacks. When the base case is reached, 2 * 4 = 8 stack frames would exist. In addition, there is one more stack frame for the global scope when mystery(5,6) is made from global scope. Finally 1+8 = 9, so there are 9 stack frames.

4.
If a and b both equal to -2 (a = -2, b = -2), infinite recursion would occur. This is because unless a times b equal 0, the base case would not be reached and the else statement would continue to run, causing infinite recursion. In order for a times b to equal 0, one of the variables must reach 0 eventually. If a times b does not equal 0, their values are subtracted 1 and 2, respectively. In this case, if a = -2 and b = -2, variables a and b would continue to be a negative integer (since a - 1 = -3, b -2 = -4 and continuedâ€¦). Therefore, both variables a and b will never reach 0, causing the base case to never be reached and eventually causing infinite recursion. 